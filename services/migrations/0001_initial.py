# Generated by Django 3.2.3 on 2021-06-13 20:37

from django.db import migrations, models
import django.db.models.deletion
import services.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=50, verbose_name='Product category name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=25, verbose_name='Tag Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=150, verbose_name='Vendor Name')),
                ('service', models.CharField(choices=[('REST', 'restaurant'), ('PARTY', 'party'), ('PHAR', 'pharmacy'), ('GRO', 'groceries'), ('CLOTH', 'clothing')], max_length=6, verbose_name='Service')),
                ('location', models.CharField(max_length=200, verbose_name='location')),
                ('cover', models.ImageField(upload_to=services.models.vendor_directory_path, verbose_name='Vendor image cover')),
                ('Rating', models.DecimalField(decimal_places=1, editable=False, max_digits=2, null=True, verbose_name='Rating')),
                ('tags', models.ManyToManyField(to='services.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=50, verbose_name='Product Name')),
                ('detail', models.CharField(max_length=1000, verbose_name='Product Detail')),
                ('price', models.FloatField(verbose_name='Product Price')),
                ('looks', models.ImageField(upload_to=services.models.vendor_directory_path, verbose_name='Product Image')),
                ('product_category', models.ForeignKey(default='foods', on_delete=django.db.models.deletion.SET_DEFAULT, to='services.productcategory')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.vendor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='productcategory',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.vendor'),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('weekday', models.PositiveSmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='Weekday')),
                ('from_hour', models.TimeField(verbose_name='From Time')),
                ('to_hour', models.TimeField(verbose_name='To Time')),
                ('closed_open', models.PositiveSmallIntegerField(choices=[(0, 'Closed'), (1, 'Open')], verbose_name='Closed or Open')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.vendor')),
            ],
            options={
                'unique_together': {('vendor', 'weekday')},
            },
        ),
    ]
